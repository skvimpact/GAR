// <auto-generated />
using System;
using DataLayer.EfCode;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataLayer.Migrations
{
    [DbContext(typeof(DeltaContext))]
    partial class DeltaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("delta")
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DataLayer.EfClasses.AddrObj", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    b.Property<long>("ChangeId")
                        .HasColumnType("bigint")
                        .HasColumnName("CHANGEID");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ENDDATE");

                    b.Property<int>("IsActive")
                        .HasColumnType("int")
                        .HasColumnName("ISACTIVE");

                    b.Property<int>("Isactual")
                        .HasColumnType("int")
                        .HasColumnName("ISACTUAL");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("LEVEL");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NAME");

                    b.Property<long?>("NextId")
                        .HasColumnType("bigint")
                        .HasColumnName("NEXTID");

                    b.Property<long>("ObjectId")
                        .HasColumnType("bigint")
                        .HasColumnName("OBJECTID");

                    b.Property<string>("ObjectguId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("OBJECTGUID");

                    b.Property<int>("OpertypeId")
                        .HasColumnType("int")
                        .HasColumnName("OPERTYPEID");

                    b.Property<long?>("PrevId")
                        .HasColumnType("bigint")
                        .HasColumnName("PREVID");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("STARTDATE");

                    b.Property<string>("Typename")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TYPENAME");

                    b.Property<DateTime>("UpDateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UPDATEDATE");

                    b.HasKey("Id");

                    b.ToTable("ADDR_OBJ", "delta");
                });

            modelBuilder.Entity("DataLayer.EfClasses.AddrObjType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DESC");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ENDDATE");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("ISACTIVE");

                    b.Property<int>("Level")
                        .HasColumnType("int")
                        .HasColumnName("LEVEL");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NAME");

                    b.Property<string>("Shortname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SHORTNAME");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("STARTDATE");

                    b.Property<DateTime>("UpDateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UPDATEDATE");

                    b.HasKey("Id");

                    b.ToTable("ADDR_OBJ_TYPES", "delta");
                });

            modelBuilder.Entity("DataLayer.EfClasses.AdmHierarchy", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    b.Property<string>("Areacode")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AREACODE");

                    b.Property<long>("ChangeId")
                        .HasColumnType("bigint")
                        .HasColumnName("CHANGEID");

                    b.Property<string>("Citycode")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CITYCODE");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ENDDATE");

                    b.Property<int>("IsActive")
                        .HasColumnType("int")
                        .HasColumnName("ISACTIVE");

                    b.Property<long?>("NextId")
                        .HasColumnType("bigint")
                        .HasColumnName("NEXTID");

                    b.Property<long>("ObjectId")
                        .HasColumnType("bigint")
                        .HasColumnName("OBJECTID");

                    b.Property<long?>("ParentobjId")
                        .HasColumnType("bigint")
                        .HasColumnName("PARENTOBJID");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PATH");

                    b.Property<string>("Placecode")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PLACECODE");

                    b.Property<string>("Plancode")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PLANCODE");

                    b.Property<long?>("PrevId")
                        .HasColumnType("bigint")
                        .HasColumnName("PREVID");

                    b.Property<string>("Regioncode")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("REGIONCODE");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("STARTDATE");

                    b.Property<string>("Streetcode")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("STREETCODE");

                    b.Property<DateTime>("UpDateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UPDATEDATE");

                    b.HasKey("Id");

                    b.ToTable("ADM_HIERARCHY", "delta");
                });

            modelBuilder.Entity("DataLayer.EfClasses.House", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    b.Property<string>("Addnum1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ADDNUM1");

                    b.Property<string>("Addnum2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ADDNUM2");

                    b.Property<int?>("Addtype1")
                        .HasColumnType("int")
                        .HasColumnName("ADDTYPE1");

                    b.Property<int?>("Addtype2")
                        .HasColumnType("int")
                        .HasColumnName("ADDTYPE2");

                    b.Property<long>("ChangeId")
                        .HasColumnType("bigint")
                        .HasColumnName("CHANGEID");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ENDDATE");

                    b.Property<string>("Housenum")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("HOUSENUM");

                    b.Property<int?>("Housetype")
                        .HasColumnType("int")
                        .HasColumnName("HOUSETYPE");

                    b.Property<int>("IsActive")
                        .HasColumnType("int")
                        .HasColumnName("ISACTIVE");

                    b.Property<int>("Isactual")
                        .HasColumnType("int")
                        .HasColumnName("ISACTUAL");

                    b.Property<long?>("NextId")
                        .HasColumnType("bigint")
                        .HasColumnName("NEXTID");

                    b.Property<long>("ObjectId")
                        .HasColumnType("bigint")
                        .HasColumnName("OBJECTID");

                    b.Property<string>("ObjectguId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("OBJECTGUID");

                    b.Property<int>("OpertypeId")
                        .HasColumnType("int")
                        .HasColumnName("OPERTYPEID");

                    b.Property<long?>("PrevId")
                        .HasColumnType("bigint")
                        .HasColumnName("PREVID");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("STARTDATE");

                    b.Property<DateTime>("UpDateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UPDATEDATE");

                    b.HasKey("Id");

                    b.ToTable("HOUSES", "delta");
                });

            modelBuilder.Entity("DataLayer.EfClasses.HouseType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DESC");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ENDDATE");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("ISACTIVE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NAME");

                    b.Property<string>("Shortname")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SHORTNAME");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("STARTDATE");

                    b.Property<DateTime>("UpDateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UPDATEDATE");

                    b.HasKey("Id");

                    b.ToTable("HOUSE_TYPES", "delta");
                });

            modelBuilder.Entity("DataLayer.EfClasses.MunHierarchy", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    b.Property<long>("ChangeId")
                        .HasColumnType("bigint")
                        .HasColumnName("CHANGEID");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ENDDATE");

                    b.Property<int>("IsActive")
                        .HasColumnType("int")
                        .HasColumnName("ISACTIVE");

                    b.Property<long?>("NextId")
                        .HasColumnType("bigint")
                        .HasColumnName("NEXTID");

                    b.Property<long>("ObjectId")
                        .HasColumnType("bigint")
                        .HasColumnName("OBJECTID");

                    b.Property<string>("Oktmo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("OKTMO");

                    b.Property<long?>("ParentobjId")
                        .HasColumnType("bigint")
                        .HasColumnName("PARENTOBJID");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PATH");

                    b.Property<long?>("PrevId")
                        .HasColumnType("bigint")
                        .HasColumnName("PREVID");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("STARTDATE");

                    b.Property<DateTime>("UpDateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UPDATEDATE");

                    b.HasKey("Id");

                    b.ToTable("MUN_HIERARCHY", "delta");
                });

            modelBuilder.Entity("DataLayer.EfClasses.ObjectLevel", b =>
                {
                    b.Property<int>("Level")
                        .HasColumnType("int")
                        .HasColumnName("LEVEL");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ENDDATE");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("ISACTIVE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NAME");

                    b.Property<string>("Shortname")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SHORTNAME");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("STARTDATE");

                    b.Property<DateTime>("UpDateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UPDATEDATE");

                    b.HasKey("Level");

                    b.ToTable("OBJECT_LEVELS", "delta");
                });

            modelBuilder.Entity("DataLayer.EfClasses.Param", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    b.Property<long?>("ChangeId")
                        .HasColumnType("bigint")
                        .HasColumnName("CHANGEID");

                    b.Property<long>("ChangeIdend")
                        .HasColumnType("bigint")
                        .HasColumnName("CHANGEIDEND");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ENDDATE");

                    b.Property<long>("ObjectId")
                        .HasColumnType("bigint")
                        .HasColumnName("OBJECTID");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("STARTDATE");

                    b.Property<int>("TypeId")
                        .HasColumnType("int")
                        .HasColumnName("TYPEID");

                    b.Property<DateTime>("UpDateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UPDATEDATE");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("VALUE");

                    b.HasKey("Id");

                    b.ToTable("PARAM", "delta");
                });

            modelBuilder.Entity("DataLayer.EfClasses.ParamType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CODE");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DESC");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ENDDATE");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("ISACTIVE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NAME");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("STARTDATE");

                    b.Property<DateTime>("UpDateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UPDATEDATE");

                    b.HasKey("Id");

                    b.ToTable("PARAM_TYPES", "delta");
                });
#pragma warning restore 612, 618
        }
    }
}
